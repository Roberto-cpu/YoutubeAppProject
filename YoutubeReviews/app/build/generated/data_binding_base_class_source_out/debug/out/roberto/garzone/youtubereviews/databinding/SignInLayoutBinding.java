// Generated by view binder compiler. Do not edit!
package roberto.garzone.youtubereviews.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import roberto.garzone.youtubereviews.R;

public final class SignInLayoutBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final CheckBox signInCheckboxConfirmPassword;

  @NonNull
  public final CheckBox signInCheckboxPassword;

  @NonNull
  public final Button signInConfirmButton;

  @NonNull
  public final EditText signInConfirmPassword;

  @NonNull
  public final Button signInDeleteButton;

  @NonNull
  public final EditText signInEmail;

  @NonNull
  public final ConstraintLayout signInLayout;

  @NonNull
  public final EditText signInPassword;

  @NonNull
  public final ImageView signInProfileImage;

  @NonNull
  public final TextView signInTitle;

  @NonNull
  public final Toolbar signInToolbar;

  @NonNull
  public final EditText signInUser;

  private SignInLayoutBinding(@NonNull ConstraintLayout rootView,
      @NonNull CheckBox signInCheckboxConfirmPassword, @NonNull CheckBox signInCheckboxPassword,
      @NonNull Button signInConfirmButton, @NonNull EditText signInConfirmPassword,
      @NonNull Button signInDeleteButton, @NonNull EditText signInEmail,
      @NonNull ConstraintLayout signInLayout, @NonNull EditText signInPassword,
      @NonNull ImageView signInProfileImage, @NonNull TextView signInTitle,
      @NonNull Toolbar signInToolbar, @NonNull EditText signInUser) {
    this.rootView = rootView;
    this.signInCheckboxConfirmPassword = signInCheckboxConfirmPassword;
    this.signInCheckboxPassword = signInCheckboxPassword;
    this.signInConfirmButton = signInConfirmButton;
    this.signInConfirmPassword = signInConfirmPassword;
    this.signInDeleteButton = signInDeleteButton;
    this.signInEmail = signInEmail;
    this.signInLayout = signInLayout;
    this.signInPassword = signInPassword;
    this.signInProfileImage = signInProfileImage;
    this.signInTitle = signInTitle;
    this.signInToolbar = signInToolbar;
    this.signInUser = signInUser;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static SignInLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static SignInLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.sign_in_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static SignInLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.sign_in_checkbox_confirm_password;
      CheckBox signInCheckboxConfirmPassword = ViewBindings.findChildViewById(rootView, id);
      if (signInCheckboxConfirmPassword == null) {
        break missingId;
      }

      id = R.id.sign_in_checkbox_password;
      CheckBox signInCheckboxPassword = ViewBindings.findChildViewById(rootView, id);
      if (signInCheckboxPassword == null) {
        break missingId;
      }

      id = R.id.sign_in_confirm_button;
      Button signInConfirmButton = ViewBindings.findChildViewById(rootView, id);
      if (signInConfirmButton == null) {
        break missingId;
      }

      id = R.id.sign_in_confirm_password;
      EditText signInConfirmPassword = ViewBindings.findChildViewById(rootView, id);
      if (signInConfirmPassword == null) {
        break missingId;
      }

      id = R.id.sign_in_delete_button;
      Button signInDeleteButton = ViewBindings.findChildViewById(rootView, id);
      if (signInDeleteButton == null) {
        break missingId;
      }

      id = R.id.sign_in_email;
      EditText signInEmail = ViewBindings.findChildViewById(rootView, id);
      if (signInEmail == null) {
        break missingId;
      }

      ConstraintLayout signInLayout = (ConstraintLayout) rootView;

      id = R.id.sign_in_password;
      EditText signInPassword = ViewBindings.findChildViewById(rootView, id);
      if (signInPassword == null) {
        break missingId;
      }

      id = R.id.sign_in_profile_image;
      ImageView signInProfileImage = ViewBindings.findChildViewById(rootView, id);
      if (signInProfileImage == null) {
        break missingId;
      }

      id = R.id.sign_in_title;
      TextView signInTitle = ViewBindings.findChildViewById(rootView, id);
      if (signInTitle == null) {
        break missingId;
      }

      id = R.id.sign_in_toolbar;
      Toolbar signInToolbar = ViewBindings.findChildViewById(rootView, id);
      if (signInToolbar == null) {
        break missingId;
      }

      id = R.id.sign_in_user;
      EditText signInUser = ViewBindings.findChildViewById(rootView, id);
      if (signInUser == null) {
        break missingId;
      }

      return new SignInLayoutBinding((ConstraintLayout) rootView, signInCheckboxConfirmPassword,
          signInCheckboxPassword, signInConfirmButton, signInConfirmPassword, signInDeleteButton,
          signInEmail, signInLayout, signInPassword, signInProfileImage, signInTitle, signInToolbar,
          signInUser);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
