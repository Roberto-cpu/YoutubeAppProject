// Generated by view binder compiler. Do not edit!
package roberto.garzone.youtubereviews.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import roberto.garzone.youtubereviews.R;

public final class LoginLayoutBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView loginAsText;

  @NonNull
  public final Button loginConfirmButton;

  @NonNull
  public final EditText loginEmail;

  @NonNull
  public final Button loginGuestButton;

  @NonNull
  public final ConstraintLayout loginLayout;

  @NonNull
  public final EditText loginPassword;

  @NonNull
  public final Button loginSignInButton;

  @NonNull
  public final TextView loginTitle;

  @NonNull
  public final Toolbar loginToolbar;

  @NonNull
  public final CheckBox nightModeBtn;

  @NonNull
  public final CheckBox rememberMeBtn;

  @NonNull
  public final TextView signInText;

  private LoginLayoutBinding(@NonNull ConstraintLayout rootView, @NonNull TextView loginAsText,
      @NonNull Button loginConfirmButton, @NonNull EditText loginEmail,
      @NonNull Button loginGuestButton, @NonNull ConstraintLayout loginLayout,
      @NonNull EditText loginPassword, @NonNull Button loginSignInButton,
      @NonNull TextView loginTitle, @NonNull Toolbar loginToolbar, @NonNull CheckBox nightModeBtn,
      @NonNull CheckBox rememberMeBtn, @NonNull TextView signInText) {
    this.rootView = rootView;
    this.loginAsText = loginAsText;
    this.loginConfirmButton = loginConfirmButton;
    this.loginEmail = loginEmail;
    this.loginGuestButton = loginGuestButton;
    this.loginLayout = loginLayout;
    this.loginPassword = loginPassword;
    this.loginSignInButton = loginSignInButton;
    this.loginTitle = loginTitle;
    this.loginToolbar = loginToolbar;
    this.nightModeBtn = nightModeBtn;
    this.rememberMeBtn = rememberMeBtn;
    this.signInText = signInText;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LoginLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LoginLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.login_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LoginLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.login_as_text;
      TextView loginAsText = ViewBindings.findChildViewById(rootView, id);
      if (loginAsText == null) {
        break missingId;
      }

      id = R.id.login_confirm_button;
      Button loginConfirmButton = ViewBindings.findChildViewById(rootView, id);
      if (loginConfirmButton == null) {
        break missingId;
      }

      id = R.id.login_email;
      EditText loginEmail = ViewBindings.findChildViewById(rootView, id);
      if (loginEmail == null) {
        break missingId;
      }

      id = R.id.login_guest_button;
      Button loginGuestButton = ViewBindings.findChildViewById(rootView, id);
      if (loginGuestButton == null) {
        break missingId;
      }

      ConstraintLayout loginLayout = (ConstraintLayout) rootView;

      id = R.id.login_password;
      EditText loginPassword = ViewBindings.findChildViewById(rootView, id);
      if (loginPassword == null) {
        break missingId;
      }

      id = R.id.login_sign_in_button;
      Button loginSignInButton = ViewBindings.findChildViewById(rootView, id);
      if (loginSignInButton == null) {
        break missingId;
      }

      id = R.id.login_title;
      TextView loginTitle = ViewBindings.findChildViewById(rootView, id);
      if (loginTitle == null) {
        break missingId;
      }

      id = R.id.login_toolbar;
      Toolbar loginToolbar = ViewBindings.findChildViewById(rootView, id);
      if (loginToolbar == null) {
        break missingId;
      }

      id = R.id.night_mode_btn;
      CheckBox nightModeBtn = ViewBindings.findChildViewById(rootView, id);
      if (nightModeBtn == null) {
        break missingId;
      }

      id = R.id.remember_me_btn;
      CheckBox rememberMeBtn = ViewBindings.findChildViewById(rootView, id);
      if (rememberMeBtn == null) {
        break missingId;
      }

      id = R.id.sign_in_text;
      TextView signInText = ViewBindings.findChildViewById(rootView, id);
      if (signInText == null) {
        break missingId;
      }

      return new LoginLayoutBinding((ConstraintLayout) rootView, loginAsText, loginConfirmButton,
          loginEmail, loginGuestButton, loginLayout, loginPassword, loginSignInButton, loginTitle,
          loginToolbar, nightModeBtn, rememberMeBtn, signInText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
