// Generated by view binder compiler. Do not edit!
package roberto.garzone.youtubereviews.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ListView;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import roberto.garzone.youtubereviews.R;

public final class SongsListLayoutBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ListView songsList;

  @NonNull
  public final ConstraintLayout songsListLayout;

  @NonNull
  public final Button songsListSettings;

  @NonNull
  public final Spinner songsListSpinner;

  @NonNull
  public final TextView songsListTitle;

  @NonNull
  public final Toolbar songsListToolbar;

  private SongsListLayoutBinding(@NonNull ConstraintLayout rootView, @NonNull ListView songsList,
      @NonNull ConstraintLayout songsListLayout, @NonNull Button songsListSettings,
      @NonNull Spinner songsListSpinner, @NonNull TextView songsListTitle,
      @NonNull Toolbar songsListToolbar) {
    this.rootView = rootView;
    this.songsList = songsList;
    this.songsListLayout = songsListLayout;
    this.songsListSettings = songsListSettings;
    this.songsListSpinner = songsListSpinner;
    this.songsListTitle = songsListTitle;
    this.songsListToolbar = songsListToolbar;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static SongsListLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static SongsListLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.songs_list_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static SongsListLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.songs_list;
      ListView songsList = ViewBindings.findChildViewById(rootView, id);
      if (songsList == null) {
        break missingId;
      }

      ConstraintLayout songsListLayout = (ConstraintLayout) rootView;

      id = R.id.songs_list_settings;
      Button songsListSettings = ViewBindings.findChildViewById(rootView, id);
      if (songsListSettings == null) {
        break missingId;
      }

      id = R.id.songs_list_spinner;
      Spinner songsListSpinner = ViewBindings.findChildViewById(rootView, id);
      if (songsListSpinner == null) {
        break missingId;
      }

      id = R.id.songs_list_title;
      TextView songsListTitle = ViewBindings.findChildViewById(rootView, id);
      if (songsListTitle == null) {
        break missingId;
      }

      id = R.id.songs_list_toolbar;
      Toolbar songsListToolbar = ViewBindings.findChildViewById(rootView, id);
      if (songsListToolbar == null) {
        break missingId;
      }

      return new SongsListLayoutBinding((ConstraintLayout) rootView, songsList, songsListLayout,
          songsListSettings, songsListSpinner, songsListTitle, songsListToolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
