// Generated by view binder compiler. Do not edit!
package roberto.garzone.youtubereviews.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.ListView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import roberto.garzone.youtubereviews.R;

public final class ReviewLayoutBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ListView commentsList;

  @NonNull
  public final Button reviewBackButton;

  @NonNull
  public final LinearLayout reviewLayout;

  @NonNull
  public final TextView reviewPageTitle;

  @NonNull
  public final Toolbar reviewToolbar;

  @NonNull
  public final TextView textCreator;

  @NonNull
  public final TextView textMessage;

  @NonNull
  public final TextView textTitle;

  private ReviewLayoutBinding(@NonNull LinearLayout rootView, @NonNull ListView commentsList,
      @NonNull Button reviewBackButton, @NonNull LinearLayout reviewLayout,
      @NonNull TextView reviewPageTitle, @NonNull Toolbar reviewToolbar,
      @NonNull TextView textCreator, @NonNull TextView textMessage, @NonNull TextView textTitle) {
    this.rootView = rootView;
    this.commentsList = commentsList;
    this.reviewBackButton = reviewBackButton;
    this.reviewLayout = reviewLayout;
    this.reviewPageTitle = reviewPageTitle;
    this.reviewToolbar = reviewToolbar;
    this.textCreator = textCreator;
    this.textMessage = textMessage;
    this.textTitle = textTitle;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ReviewLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ReviewLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.review_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ReviewLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.comments_list;
      ListView commentsList = ViewBindings.findChildViewById(rootView, id);
      if (commentsList == null) {
        break missingId;
      }

      id = R.id.review_back_button;
      Button reviewBackButton = ViewBindings.findChildViewById(rootView, id);
      if (reviewBackButton == null) {
        break missingId;
      }

      LinearLayout reviewLayout = (LinearLayout) rootView;

      id = R.id.review_page_title;
      TextView reviewPageTitle = ViewBindings.findChildViewById(rootView, id);
      if (reviewPageTitle == null) {
        break missingId;
      }

      id = R.id.review_toolbar;
      Toolbar reviewToolbar = ViewBindings.findChildViewById(rootView, id);
      if (reviewToolbar == null) {
        break missingId;
      }

      id = R.id.text_creator;
      TextView textCreator = ViewBindings.findChildViewById(rootView, id);
      if (textCreator == null) {
        break missingId;
      }

      id = R.id.text_message;
      TextView textMessage = ViewBindings.findChildViewById(rootView, id);
      if (textMessage == null) {
        break missingId;
      }

      id = R.id.text_title;
      TextView textTitle = ViewBindings.findChildViewById(rootView, id);
      if (textTitle == null) {
        break missingId;
      }

      return new ReviewLayoutBinding((LinearLayout) rootView, commentsList, reviewBackButton,
          reviewLayout, reviewPageTitle, reviewToolbar, textCreator, textMessage, textTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
