// Generated by view binder compiler. Do not edit!
package roberto.garzone.youtubereviews.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import roberto.garzone.youtubereviews.R;

public final class ReviewsListItemBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView reviewCreator;

  @NonNull
  public final TextView reviewMessage;

  @NonNull
  public final TextView reviewNumberComments;

  @NonNull
  public final TextView reviewTitle;

  private ReviewsListItemBinding(@NonNull LinearLayout rootView, @NonNull TextView reviewCreator,
      @NonNull TextView reviewMessage, @NonNull TextView reviewNumberComments,
      @NonNull TextView reviewTitle) {
    this.rootView = rootView;
    this.reviewCreator = reviewCreator;
    this.reviewMessage = reviewMessage;
    this.reviewNumberComments = reviewNumberComments;
    this.reviewTitle = reviewTitle;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ReviewsListItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ReviewsListItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.reviews_list_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ReviewsListItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.review_creator;
      TextView reviewCreator = ViewBindings.findChildViewById(rootView, id);
      if (reviewCreator == null) {
        break missingId;
      }

      id = R.id.review_message;
      TextView reviewMessage = ViewBindings.findChildViewById(rootView, id);
      if (reviewMessage == null) {
        break missingId;
      }

      id = R.id.review_number_comments;
      TextView reviewNumberComments = ViewBindings.findChildViewById(rootView, id);
      if (reviewNumberComments == null) {
        break missingId;
      }

      id = R.id.review_title;
      TextView reviewTitle = ViewBindings.findChildViewById(rootView, id);
      if (reviewTitle == null) {
        break missingId;
      }

      return new ReviewsListItemBinding((LinearLayout) rootView, reviewCreator, reviewMessage,
          reviewNumberComments, reviewTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
